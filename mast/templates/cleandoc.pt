<metal:main use-macro="load: admin.pt">
<div metal:fill-slot="content">
    <div class="row">
        <section class="slot-6-7-8">
            <h2>Add Document Names</h2>
        </section>
    </div>
    <div class="row dashboard">
        <section class="slot-6-7">
            <div tal:condition="doc['dtype'] == 'pet'">
            <form action="#" method="POST">
                <h3>Transcribe ${doc['cnt']} ${'Petition Signature' if doc['dtype'] == 'pet' else 'Applicant Name'}${'s' if doc['cnt'] > 1 else ''}</h3>
                <p class="note" style="padding-bottom:1.1em">Using the document view on the right, try to enter the information on the form that you can read as best you can.  Hitting "Save" will update this record.  "Cancel" will discard any unsaved changes.  You do not have to enter every name in order to save.</p>
                <table class="entrygrid" width="100%">
                <tr>
                    <td class="name">Full Name</td>
                    <td class="addr">Address</td>
                    <td class="contact">Email</td>
                    <td class="contact">Phone</td>
                </tr>
                <?python 
                    docnames = doc['names'] if 'names' in doc else [] 
                    dnlen = len(docnames)
                ?>
                <tr tal:repeat="ind python:range(doc['cnt'])">
                    <td class="name"><input type="text" name="name${ind}" value="${docnames[ind]['n'] if dnlen > ind else ''}"/></td>
                    <td class="name"><input type="text" name="addr${ind}" value="${docnames[ind]['a'] if dnlen > ind else ''}"/></td>
                    <td class="name"><input type="text" name="phone${ind}" value="${docnames[ind]['ph'] if dnlen > ind else ''}"/></td>
                    <td class="name"><input type="text" name="email${ind}" value="${docnames[ind]['em'] if dnlen > ind else ''}"/></td>
                </tr>
                </table>
                <div class="buttons">
                    <button class="submit" submit="true">Submit</button>
                    <a class="cancel" href="/admin/clean.html">Cancel</a>
                </div>
            </form>
            </div>
            <div tal:condition="doc['dtype'] == 'app'">
            <p>This is for review only.  No action is required for pre-application forms.</p>
            </div>
        </section>
        <section class="slot-8-9">
            <?python
                preview_url = '/upload/view/'+str(doc['_id'])
                preview_url += doc['ext'] if 'ext' in doc else '.jpeg'
            ?>
            <p>Document Preview <em class="note">if you don't see a preview below then <a href="${preview_url if preview_url is not None else '/static/images/blank.gif'}" target="previewdoc">click here</a></em></p>
            <div class="toolbar"><a class="lrotate" title="Rotate Left"></a><a class="rrotate" title="Rotate Right"></a><a title="Zoom In" class="zoomin"></a><a title="Zoom Out" class="zoomout"></a><a class="zoomlevel">50%</a><a class="resetview">reset image</a></div>
            <div class="preview" style="position:relative;border:solid #999 1px;height:550px;width:585px;overflow:hidden"><canvas id="previewCanvas" style="position:absolute;top:0;left:0"></canvas></div>
            <div class="note" style="text-align:center;font-style:italic;width:425px;">Click and drag image to move</div>
        </section>
    </div>
    <script>
    jQuery(function($) {
        // One degree in radians
        var TO_RADIANS = Math.PI / 180;
         
        // One radian in degrees
        var TO_DEGREES = 180 / Math.PI;
        var zoomlabel = $('.zoomlevel');
        var canvas = document.getElementById('previewCanvas');
        var canvasObj = $('#previewCanvas');
        var ctx = canvas.getContext('2d');
        // load image from data url
        var imageObj = new Image();
        var imgw = 0;
        var imgh = 0;
        var scale = 0.5;
        var rotation = 0;
        var offW = 0;
        var offH = 0;
        imageObj.onload = function(){
            var tools = $('.toolbar');
            tools.children('a.lrotate').click(function(e) {
                rotate(true);
            });
            tools.children('a.rrotate').click(function(e) {
                rotate();
            });
            tools.children('a.zoomin').click(function(e) {
                zoom(0.25);
            });
            tools.children('a.zoomout').click(function(e) {
                zoom(-0.25);
            });
            tools.children('a.resetview').click(resetview);
            canvasObj.bind('mousedown',function(event) {
                canvasObj.attr({'moving':'true','lastx':event.pageX,'lasty':event.pageY});
                window.console.log('lastx: '+event.pageX+', lasty: '+event.pageY);
                $(window).one('mouseup',function() { canvasObj.removeAttr('moving'); });
            }).bind('mousemove',function(event) {
                if (canvasObj.attr('moving') === 'true') {
                    var x = event.pageX;
                    var y = event.pageY;
                    var xdiff = parseInt(canvasObj.attr('lastx')||0) - x;
                    var ydiff = parseInt(canvasObj.attr('lasty')||0) - y;
                    var pos = canvasObj.position();
                    canvasObj.css({'left':pos.left - xdiff,'top': pos.top - ydiff});
                    canvasObj.attr({'lastx':x,'lasty':y});
                }
            });
            drawMe();
        };

        var radians = function(deg) {
            return deg * TO_RADIANS;
        }
        
        var resetview = function() {
            scale = 0.5;
            rotation = 0;
            canvasObj.css({'left':0,'top':0});
            drawMe();
        }
        
        var zoom = function(amt) {
            window.console.log('zooming to '+amt);
            scale += amt;
            if (scale <= 0.5) scale = 0.5;
            drawMe();
        }
        
        var rotate = function(left) {
            var amt = left ? -90 : 90;
            rotation += amt;
            if (rotation === 360) rotation = 0;
            else if (rotation < 0) rotation = 360 + rotation;
            drawMe();
        }
        
        var drawMe = function() {
            var cw = imageObj.width;
            var ch = imageObj.height;
            var cy = 0;
            var cx = 0;
            if (rotation) {
                switch (rotation) {
                     case 90:
                          cw = imageObj.height;
                          ch = imageObj.width;
                          cy = imageObj.height * (-1);
                          break;
                     case 180:
                          cx = imageObj.width * (-1);
                          cy = imageObj.height * (-1);
                          break;
                     case 270:
                          cw = imageObj.height;
                          ch = imageObj.width;
                          cx = imageObj.width * (-1);
                          break;
                }
            }
            cw *= scale;
            ch *= scale;
            canvas.width = cw;
            canvas.height = ch;
            ctx.rotate(radians(rotation));
            ctx.scale(scale,scale);
            zoomlabel.html(scale*100+'%');
            window.console.log('zoom: '+scale);
            window.console.log('rotation: '+rotation);
            window.console.log('cx: '+cx+', offH: '+cy);
            ctx.drawImage(imageObj, cx, cy);
        };
     
        imageObj.src = '${preview_url if preview_url is not None else 'blank.gif'}';
    });
    </script>
</div>
</metal:main>
